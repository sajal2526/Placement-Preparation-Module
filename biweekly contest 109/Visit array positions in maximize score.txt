class Solution {
public:
    long long dp[100005][2];
    long long maxi(long long a, long long b) {
        return a > b ? a : b;
    }
    long long solve(vector<int> &arr, int i, int parity, int x) {
        if(i >= arr.size()) return 0;
        if(dp[i][parity] != -1) return dp[i][parity];
        
        long long take = 0, notTake = 0;
        int cur = arr[i]&1;
        if(cur == parity) {
            take = arr[i]+solve(arr, i+1, cur, x);
        }
        else {
            take = arr[i] + solve(arr, i+1, cur, x) - x;
            notTake = solve(arr, i+1, parity, x);
        }
        
        return dp[i][parity] = maxi(take, notTake);
    }
    long long maxScore(vector<int>& nums, int x) {
        
        vector<long long> arr(nums.begin(), nums.end());
        int parity = arr[0]&1;
        
        memset(dp, -1, sizeof(dp));
        
        return arr[0] + solve(nums, 1, parity, x);
    }
};